import net.msrandom.postprocess.PostProcessClasses

architectury {
    platformSetupLoomIde()
}

loom {
    accessWidenerPath = project(":common").loom.accessWidenerPath
    forge {
        convertAccessWideners = true
        extraAccessWideners.add loom.accessWidenerPath.get().asFile.name
    }
}

tasks.register("processJavaClasses", PostProcessClasses) {
    extensionPackages.addAll(
            "earth.terrarium.spiritualize.extensions",
    )

    dependsOn(tasks.compileJava)
}

sourceSets.main {
    def commonSourceSets = project(":common").sourceSets

    def commonMain = commonSourceSets.named("main")

    java.srcDirs(
        commonMain.map { it.java.srcDirs },
    )

    resources.srcDirs(
        commonMain.map { it.resources.srcDirs },
    )

    compiledBy(processJavaClasses)
}

dependencies {
    forge "net.minecraftforge:forge:${rootProject.forge_version}"
    include modApi("com.teamresourceful.resourcefullib:resourcefullib-forge-$rootProject.resourcefullib_version")
    modImplementation "me.codexadrian.spirit:spirit-common-1.19.2:${rootProject.spirit_version}"
    modRuntimeOnly "mekanism:Mekanism:${mekanism_version}"// core
    modRuntimeOnly "mekanism:Mekanism:${mekanism_version}:additions"// Mekanism: Addition
    modRuntimeOnly "mekanism:Mekanism:${mekanism_version}:generators"// Mekanism: Generator
    modRuntimeOnly "mekanism:Mekanism:${mekanism_version}:tools"// Mekanism: Tool
    compileOnly(project(path: ":common")) { transitive false }
    //shadowCommon(project(path: ":common", configuration: "transformProductionForge")) { transitive = false }
}

processResources {
    inputs.property "version", project.version

    filesMatching("META-INF/mods.toml") {
        expand "version": project.version
    }
}

publishing {
    publications {
        mavenForge(MavenPublication) {
            artifactId = rootProject.archives_base_name + "-" + project.name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
    }
}